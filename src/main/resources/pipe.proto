syntax = "proto2";
option optimize_for = SPEED;
option java_package = "routing";

message Route {
	enum Path {
    NETWORK_DISCOVERY=0;
    NETWORK_DISCOVERY_RESPONSE=1;
    USER=2;
    MESSAGE=3;
    GROUP=4;
    PING=5;
    MSG=6;
    RAFT_MSG =7;
    USER_MESSAGES_REQUEST=8;
    USER_MESSAGES_RESPONSE=9;
    
}

    // a node should not have a value though this is not enforced
    required int64 id = 1;
    required Path path = 2;
     
    optional string payload = 3;
    optional NetworkDiscoveryPacket networkDiscoveryPacket = 4;
    optional ServerNodeDiscoveryResponse serverNodeDiscoveryResponse= 5;
    optional User user = 6;
    optional RaftMessage raftMessage=7;
    optional Header header=8;
    optional Message message=9;
    
    optional UserMessagesRequest=10;
    optional UserMessagesResponse=11;

}

message UserMessagesRequest {
  required string uname=1;
  
}

message UserMessagesResponse {
  required string uname=1;
  repeated Message messages = 2;
}

enum actionType {
    PUT=0;
    POST=1;
    DELETE=2;
    GET=3;
    
}

message RaftNode{
	enum RaftState{
    Candidate=0;
    Leader=1;
    Follower=2;
    }
	required string nodeid=1;
	required RaftState raftState=2;
}

message RaftMessage{
	enum RaftMsgType{
    LeaderHeartBeat=0;
    RequestVote=1;
    VoteResponse=2;
    LeaderElectionResult=3;
    }
	required RaftMsgType type=1;
	required string senderNodeid=2;
	
}

message User {
     // a node should not have a value though this is not enforced
     required string uname=1;
     required string email=2;
	 required actionType action =3 [default =GET];

 }

 message Message {
     // a node should not have a value though this is not enforced
     required string fromuname = 1;
     required string message = 2;
     optional string touname = 3; //required only if message is for a single user, else not required.
     optional string togname = 4; //required only if message is for a group and NOT for a single user, else not required. 
	 required actionType action =5 [default =GET];

 }
 
 message NetworkDiscoveryPacket{
 	
 	enum Sender{
    SERVER_NODE=0;
    END_USER_CLIENT=1;
    }
    
    optional string group = 1; //If sender is a server node, then this field can contain its group id. If sender is end user client, then this field is not required.
    required string nodeid = 2; //node id of the sender
    optional string ip = 3;
    required Sender sender =4 [default = SERVER_NODE]; 
 
 }
 
 message Header{
 	required string type=1;
 }
 
 message ServerNodeDiscoveryResponse{
 	
    required string group = 1;
    required string ip = 2;
 	required string nodeid = 3;
 	
 }